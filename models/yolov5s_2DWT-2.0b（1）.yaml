# yolov5s_wavelet.yaml
nc: 15  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.5  # layer channel multiple
anchors:
  - [10, 13, 16, 30, 33, 23] # P3/8
  - [30, 61, 62, 45, 59, 119] # P4/16
  - [116, 90, 156, 198, 373, 326] # P5/32
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [64, 3, 1, 1]],  # 0 - Process LL (Low Frequency) component]
   [0, 1, WaveletTransform_LL, []],  # 1 - Apply Wavelet Transform
   [0, 1, WaveletTransform_LH, []], # 2 - Apply Wavelet Transform
   [0, 1, WaveletTransform_HL, []], # 3 - Apply Wavelet Transform
   [0, 1, WaveletTransform_HH, []], # 4 - Apply Wavelet Transform

   [0, 1, WaveletTransform_LL2, []], # 5 - Apply Wavelet Transform
   [0, 1, WaveletTransform_LH2, []], # 6 - Apply Wavelet Transform
   [0, 1, WaveletTransform_HL2, []], # 7 - Apply Wavelet Transform
   [0, 1, WaveletTransform_HH2, []], # 8 - Apply Wavelet Transform

#   [2, 1, Conv, [64, 3, 1]],  # 9
#   [3, 1, Conv, [64, 3, 1]],  # 10
#   [4, 1, Conv, [64, 3, 1]],  # 11  一次小波分解  1/2
#
#   [5, 1, Conv, [128, 3, 1]], # 12
#   [6, 1, Conv, [128, 3, 1]], # 13
#   [7, 1, Conv, [128, 3, 1]], # 14
#   [8, 1, Conv, [128, 3, 1]], # 15  二次小波变换  1/4

   # 一次小波变换卷积后与二次小波变换LH,HL,HH 分别融合
   [2, 1, Conv, [128, 3, 2]],  # 9                  LH
   [[6, 9], 1, Concat, [1]],   #10

   [3, 1, Conv, [128, 3, 2]],  # 11  HL
   [[7, 11], 1, Concat, [1]],    # 12

   [4, 1, Conv, [128, 3, 2]],  # 13  一次小波变换卷积下采样 1/4
   [[8,13 ], 1, Concat, [1]],    #14 HH

   #将HL与HH融合，LH作为单分支
   [[12, 14], 1, Concat, [1]],  # 15

#  完成小波变换部分，尺度为1/4
   [5, 1, Conv, [256, 3, 2]],  # 16 - P3/8
   [10, 1, Conv, [256, 3, 2]],  # 17 - P3/8
   [15, 1, Conv, [256, 3, 2]],  # 18

#  完成1/8下采样，接下来是融合三个分支
   [[16, 17, 18], 1, Concat, [1]],  # 19
#   [19, 6, C3, [512]],  # 20
#  以下是共享部分：1/16，1/32
   [19, 1, Conv, [512, 3, 2]],  # 21
   [20, 6, C3, [512]],  # 22          1/16

   [21, 1, Conv, [1024, 3, 2]],  # 23
   [22, 6, C3, [1024]],  # 24          1/32

   [23, 1, SPPF, [1024, 5]],  # 25
  ]

head:
  [
   [24, 1, Conv, [512, 1, 1]],  # 26
   [25, 1,  nn.Upsample, [None, 2, 'nearest']],  # 27
   [[21, 26], 1, Concat, [1]],  # 28
   [27, 3, C3, [512, False]],  # 29      1/16

   [28, 1, Conv, [256, 1, 1]],  # 30
   [29, 1, nn.Upsample, [None, 2, 'nearest']],  # 31
   [[19,30 ], 1, Concat, [1]],  # 32
   [31, 3, C3, [256, False]],  # 33       1/8

   [32, 1, Conv, [256, 1, 2 ] ],  # 34
   [[28,33], 1, Concat, [1] ],  # 35
   [34, 3, C3, [512, False] ],  # 36 (P4/16-medium) 1/16

   [35, 1, Conv, [512,1 ,2] ],  # 37
   [[24,36], 1, Concat, [1] ],  # 38
   [37, 3, C3, [1024, False] ],  # 39 (P5/32-large) 1/32

   [[32, 35, 38], 1, Detect, [nc, anchors]], # Detect(P3, P4, P5)  40
  ]